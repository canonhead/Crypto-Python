# Grup 6 TÜBİTAK 2016 UEKAE Kriptoloji Yaz Okulu
# Online compiler: http://ideone.com/
# https://repl.it/languages/python3

def invmodp(a, p):
	for d in range(1, p):
	        r = (d * a) % p
	        if r == 1:
	            break
	return d
	
def encrypt(text, key, message):
	n = 0
	while n < len(text):
		x = text[n]
		x = ord(x)
		y = key[n%len(key)]
		y = ord(y)
		z = y*(x+y)
		z = z%257
		z = chr(z)
		message.append(z)
		n += 1
	messageStr = ''.join(message)
	
def decrypt(text, key, message):
	n = 0
	while n < len(text):
		z = text[n]
		z = ord(z)
		y = key[n%len(key)]
		y = ord(y)
		yInverse = invmodp(y, 257)
		x = (z*yInverse) % 257
		x = x - y
		x = x % 257
		x = chr(x)
		message.append(x)
		n += 1

# Kullanıcıdan şifreleme (encryption) veya şifre açma (decryption) fonksiyonlarından hangisi kullanılacağı alınır
mode = str(input("Enter mode: "))
mode = mode[0].lower() #Girdinin ilk harfi alınır ve küçültülür

key = ""
text = str(input("Enter text: ")) # Açık veya kapalı metin alınır
if len(key) < 8:
	key = str(input("Enter key (min. length = 8): ")) # Kullanıcı tarafından belirlenen en az 8 karakterlik anahtar alınır

message = []
if mode == "e":
	#scramble
	m = len(key)
	text = [text[i:i+m] for i in range(0, len(text), m)]
	o = 0
	while o < len(text):
		text[o] = text[o][::-1]
		o += 1
	text = ''.join(text)
	encrypt(text, key, message)
	messageStr = ''.join(message)
elif mode == "d":
	decrypt(text, key, message)
	messageStr = ''.join(message)
	#scramble
	m = len(key)
	messageStr = [messageStr[i:i+m] for i in range(0, len(messageStr), m)]
	o = 0
	while o < len(messageStr):
		messageStr[o] = messageStr[o][::-1]
		o += 1
	messageStr = ''.join(messageStr)

print(messageStr)
